// 
Да се имплементира рекурзивна функција која за низа од цели броеви $[a{0}, a{1}, ..., a_{n-1}]$ ќе ја пресмета вредноста на 
непрекинатата дропка дефинирана како:
v=a0+1a1+...1an−2+1an−1
Да се напише програма во која се чита цел број N, по што се читаат елементите на низа од N цели броеви (не повеќе од 100).
Потоа се повикува рекурзивната функција и се печати резултатот во нов ред.
//
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<ctype.h>

#define MAX 100


float BrojPozitivni(int niza[],int index,int n)
{
   if(index==n-1)
    return niza[index];
   else
   return niza[index]+1/BrojPozitivni(niza,index+1,n);
}
int main()
{
int n,i;
scanf("%d",&n);
int niza[n];

for(i = 0; i < n; i++)
{
    scanf("%d",&niza[i]);
}

printf("%f",BrojPozitivni(niza,0 ,n));
return 0;
}
